{"ast":null,"code":"var _jsxFileName = \"/Users/garimasingh/important/frontend/src/pages/VideoMeet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from \"socket.io-client\";\nimport { Badge, IconButton, TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\nimport styles from \"../styles/videoComponent.module.css\";\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport ScreenShareIcon from '@mui/icons-material/ScreenShare';\nimport StopScreenShareIcon from '@mui/icons-material/StopScreenShare';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport server from '../environment';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst server_url = server;\nvar connections = {};\nconst peerConfigConnections = {\n  \"iceServers\": [{\n    \"urls\": \"stun:stun.l.google.com:19302\"\n  }]\n};\nexport default function VideoMeetComponent() {\n  _s();\n  var socketRef = useRef();\n  let socketIdRef = useRef();\n  let localVideoref = useRef();\n  let [videoAvailable, setVideoAvailable] = useState(true);\n  let [audioAvailable, setAudioAvailable] = useState(true);\n  let [video, setVideo] = useState([]);\n  let [audio, setAudio] = useState();\n  let [screen, setScreen] = useState();\n  let [showModal, setModal] = useState(true);\n  let [screenAvailable, setScreenAvailable] = useState();\n  let [messages, setMessages] = useState([]);\n  let [message, setMessage] = useState(\"\");\n  let [newMessages, setNewMessages] = useState(3);\n  let [askForUsername, setAskForUsername] = useState(true);\n  let [username, setUsername] = useState(\"\");\n  const videoRef = useRef([]);\n  let [videos, setVideos] = useState([]);\n\n  // TODO\n  // if(isChrome() === false) {\n\n  // }\n\n  useEffect(() => {\n    console.log(\"HELLO\");\n    getPermissions();\n  });\n  let getDislayMedia = () => {\n    if (screen) {\n      if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        }).then(getDislayMediaSuccess).then(stream => {}).catch(e => console.log(e));\n      }\n    }\n  };\n  const getPermissions = async () => {\n    try {\n      const videoPermission = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoPermission) {\n        setVideoAvailable(true);\n        console.log('Video permission granted');\n      } else {\n        setVideoAvailable(false);\n        console.log('Video permission denied');\n      }\n      const audioPermission = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      if (audioPermission) {\n        setAudioAvailable(true);\n        console.log('Audio permission granted');\n      } else {\n        setAudioAvailable(false);\n        console.log('Audio permission denied');\n      }\n      if (navigator.mediaDevices.getDisplayMedia) {\n        setScreenAvailable(true);\n      } else {\n        setScreenAvailable(false);\n      }\n      if (videoAvailable || audioAvailable) {\n        const userMediaStream = await navigator.mediaDevices.getUserMedia({\n          video: videoAvailable,\n          audio: audioAvailable\n        });\n        if (userMediaStream) {\n          window.localStream = userMediaStream;\n          if (localVideoref.current) {\n            localVideoref.current.srcObject = userMediaStream;\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (video !== undefined && audio !== undefined) {\n      getUserMedia();\n      console.log(\"SET STATE HAS \", video, audio);\n    }\n  }, [video, audio]);\n  let getMedia = () => {\n    setVideo(videoAvailable);\n    setAudio(audioAvailable);\n    connectToSocketServer();\n  };\n  let getUserMediaSuccess = stream => {\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketIdRef.current) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        console.log(description);\n        connections[id].setLocalDescription(description).then(() => {\n          socketRef.current.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n    stream.getTracks().forEach(track => track.onended = () => {\n      setVideo(false);\n      setAudio(false);\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n      let blackSilence = (...args) => new MediaStream([black(...args), silence()]);\n      window.localStream = blackSilence();\n      localVideoref.current.srcObject = window.localStream;\n      for (let id in connections) {\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socketRef.current.emit('signal', id, JSON.stringify({\n              'sdp': connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n    });\n  };\n  let getUserMedia = () => {\n    if (video && videoAvailable || audio && audioAvailable) {\n      navigator.mediaDevices.getUserMedia({\n        video: video,\n        audio: audio\n      }).then(getUserMediaSuccess).then(stream => {}).catch(e => console.log(e));\n    } else {\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {}\n    }\n  };\n  let getDislayMediaSuccess = stream => {\n    console.log(\"HERE\");\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoref.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketIdRef.current) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        connections[id].setLocalDescription(description).then(() => {\n          socketRef.current.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n    stream.getTracks().forEach(track => track.onended = () => {\n      setScreen(false);\n      try {\n        let tracks = localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n      let blackSilence = (...args) => new MediaStream([black(...args), silence()]);\n      window.localStream = blackSilence();\n      localVideoref.current.srcObject = window.localStream;\n      getUserMedia();\n    });\n  };\n  let gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n    if (fromId !== socketIdRef.current) {\n      if (signal.sdp) {\n        connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n          if (signal.sdp.type === 'offer') {\n            connections[fromId].createAnswer().then(description => {\n              connections[fromId].setLocalDescription(description).then(() => {\n                socketRef.current.emit('signal', fromId, JSON.stringify({\n                  'sdp': connections[fromId].localDescription\n                }));\n              }).catch(e => console.log(e));\n            }).catch(e => console.log(e));\n          }\n        }).catch(e => console.log(e));\n      }\n      if (signal.ice) {\n        connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e));\n      }\n    }\n  };\n  let connectToSocketServer = () => {\n    socketRef.current = io.connect(server_url, {\n      secure: false\n    });\n    socketRef.current.on('signal', gotMessageFromServer);\n    socketRef.current.on('connect', () => {\n      socketRef.current.emit('join-call', window.location.href);\n      socketIdRef.current = socketRef.current.id;\n      socketRef.current.on('chat-message', addMessage);\n      socketRef.current.on('user-left', id => {\n        setVideos(videos => videos.filter(video => video.socketId !== id));\n      });\n      socketRef.current.on('user-joined', (id, clients) => {\n        clients.forEach(socketListId => {\n          connections[socketListId] = new RTCPeerConnection(peerConfigConnections);\n          // Wait for their ice candidate       \n          connections[socketListId].onicecandidate = function (event) {\n            if (event.candidate != null) {\n              socketRef.current.emit('signal', socketListId, JSON.stringify({\n                'ice': event.candidate\n              }));\n            }\n          };\n\n          // Wait for their video stream\n          connections[socketListId].onaddstream = event => {\n            console.log(\"BEFORE:\", videoRef.current);\n            console.log(\"FINDING ID: \", socketListId);\n            let videoExists = videoRef.current.find(video => video.socketId === socketListId);\n            if (videoExists) {\n              console.log(\"FOUND EXISTING\");\n\n              // Update the stream of the existing video\n              setVideos(videos => {\n                const updatedVideos = videos.map(video => video.socketId === socketListId ? {\n                  ...video,\n                  stream: event.stream\n                } : video);\n                videoRef.current = updatedVideos;\n                return updatedVideos;\n              });\n            } else {\n              // Create a new video\n              console.log(\"CREATING NEW\");\n              let newVideo = {\n                socketId: socketListId,\n                stream: event.stream,\n                autoplay: true,\n                playsinline: true\n              };\n              setVideos(videos => {\n                const updatedVideos = [...videos, newVideo];\n                videoRef.current = updatedVideos;\n                return updatedVideos;\n              });\n            }\n          };\n\n          // Add the local video stream\n          if (window.localStream !== undefined && window.localStream !== null) {\n            connections[socketListId].addStream(window.localStream);\n          } else {\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()]);\n            window.localStream = blackSilence();\n            connections[socketListId].addStream(window.localStream);\n          }\n        });\n        if (id === socketIdRef.current) {\n          for (let id2 in connections) {\n            if (id2 === socketIdRef.current) continue;\n            try {\n              connections[id2].addStream(window.localStream);\n            } catch (e) {}\n            connections[id2].createOffer().then(description => {\n              connections[id2].setLocalDescription(description).then(() => {\n                socketRef.current.emit('signal', id2, JSON.stringify({\n                  'sdp': connections[id2].localDescription\n                }));\n              }).catch(e => console.log(e));\n            });\n          }\n        }\n      });\n    });\n  };\n  let silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], {\n      enabled: false\n    });\n  };\n  let black = ({\n    width = 640,\n    height = 480\n  } = {}) => {\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height\n    });\n    canvas.getContext('2d').fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], {\n      enabled: false\n    });\n  };\n  let handleVideo = () => {\n    setVideo(!video);\n    // getUserMedia();\n  };\n  let handleAudio = () => {\n    setAudio(!audio);\n    // getUserMedia();\n  };\n  useEffect(() => {\n    if (screen !== undefined) {\n      getDislayMedia();\n    }\n  }, [screen]);\n  let handleScreen = () => {\n    setScreen(!screen);\n  };\n  let handleEndCall = () => {\n    try {\n      let tracks = localVideoref.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n    } catch (e) {}\n    window.location.href = \"/\";\n  };\n  let openChat = () => {\n    setModal(true);\n    setNewMessages(0);\n  };\n  let closeChat = () => {\n    setModal(false);\n  };\n  let handleMessage = e => {\n    setMessage(e.target.value);\n  };\n  const addMessage = (data, sender, socketIdSender) => {\n    setMessages(prevMessages => [...prevMessages, {\n      sender: sender,\n      data: data\n    }]);\n    if (socketIdSender !== socketIdRef.current) {\n      setNewMessages(prevNewMessages => prevNewMessages + 1);\n    }\n  };\n  let sendMessage = () => {\n    console.log(socketRef.current);\n    socketRef.current.emit('chat-message', message, username);\n    setMessage(\"\");\n\n    // this.setState({ message: \"\", sender: username })\n  };\n  let connect = () => {\n    setAskForUsername(false);\n    getMedia();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: askForUsername === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter into Lobby \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: connect,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoref,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.meetVideoContainer,\n      children: [showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.chatRoom,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.chatContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chattingDisplay,\n            children: messages.length !== 0 ? messages.map((item, index) => {\n              console.log(messages);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: \"20px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: item.sender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 41\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No Messages Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chattingArea,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              id: \"outlined-basic\",\n              label: \"Enter Your chat\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainers,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleVideo,\n          style: {\n            color: \"white\"\n          },\n          children: video === true ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleEndCall,\n          style: {\n            color: \"red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CallEndIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleAudio,\n          style: {\n            color: \"white\"\n          },\n          children: audio === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }, this), screenAvailable === true ? /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleScreen,\n          style: {\n            color: \"white\"\n          },\n          children: screen === true ? /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(StopScreenShareIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: newMessages,\n          max: 999,\n          color: \"orange\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => setModal(!showModal),\n            style: {\n              color: \"white\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 33\n            }, this), \"                        \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        className: styles.meetUserVideo,\n        ref: localVideoref,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.conferenceView,\n        children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            \"data-socket\": video.socketId,\n            ref: ref => {\n              if (ref && video.stream) {\n                ref.srcObject = video.stream;\n              }\n            },\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 33\n          }, this)\n        }, video.socketId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoMeetComponent, \"P2XR+ek5p2Ifvvgzp0HYhtp1vtw=\");\n_c = VideoMeetComponent;\nvar _c;\n$RefreshReg$(_c, \"VideoMeetComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","Badge","IconButton","TextField","Button","VideocamIcon","VideocamOffIcon","styles","CallEndIcon","MicIcon","MicOffIcon","ScreenShareIcon","StopScreenShareIcon","ChatIcon","server","jsxDEV","_jsxDEV","Fragment","_Fragment","server_url","connections","peerConfigConnections","VideoMeetComponent","_s","socketRef","socketIdRef","localVideoref","videoAvailable","setVideoAvailable","audioAvailable","setAudioAvailable","video","setVideo","audio","setAudio","screen","setScreen","showModal","setModal","screenAvailable","setScreenAvailable","messages","setMessages","message","setMessage","newMessages","setNewMessages","askForUsername","setAskForUsername","username","setUsername","videoRef","videos","setVideos","console","log","getPermissions","getDislayMedia","navigator","mediaDevices","getDisplayMedia","then","getDislayMediaSuccess","stream","catch","e","videoPermission","getUserMedia","audioPermission","userMediaStream","window","localStream","current","srcObject","error","undefined","getMedia","connectToSocketServer","getUserMediaSuccess","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","localDescription","onended","tracks","blackSilence","args","MediaStream","black","silence","gotMessageFromServer","fromId","signal","parse","sdp","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","connect","secure","on","location","href","addMessage","filter","socketId","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","videoExists","find","updatedVideos","map","newVideo","autoplay","playsinline","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","width","height","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","handleVideo","handleAudio","handleScreen","handleEndCall","openChat","closeChat","handleMessage","target","value","data","sender","socketIdSender","prevMessages","prevNewMessages","sendMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","variant","onClick","ref","autoPlay","muted","className","meetVideoContainer","chatRoom","chatContainer","chattingDisplay","length","item","index","style","marginBottom","fontWeight","chattingArea","buttonContainers","color","badgeContent","max","meetUserVideo","conferenceView","_c","$RefreshReg$"],"sources":["/Users/garimasingh/important/frontend/src/pages/VideoMeet.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport io from \"socket.io-client\";\nimport { Badge, IconButton, TextField } from '@mui/material';\nimport { Button } from '@mui/material';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff'\nimport styles from \"../styles/videoComponent.module.css\";\nimport CallEndIcon from '@mui/icons-material/CallEnd'\nimport MicIcon from '@mui/icons-material/Mic'\nimport MicOffIcon from '@mui/icons-material/MicOff'\nimport ScreenShareIcon from '@mui/icons-material/ScreenShare';\nimport StopScreenShareIcon from '@mui/icons-material/StopScreenShare'\nimport ChatIcon from '@mui/icons-material/Chat'\nimport server from '../environment';\n\nconst server_url = server;\n\nvar connections = {};\n\nconst peerConfigConnections = {\n    \"iceServers\": [\n        { \"urls\": \"stun:stun.l.google.com:19302\" }\n    ]\n}\n\nexport default function VideoMeetComponent() {\n\n    var socketRef = useRef();\n    let socketIdRef = useRef();\n\n    let localVideoref = useRef();\n\n    let [videoAvailable, setVideoAvailable] = useState(true);\n\n    let [audioAvailable, setAudioAvailable] = useState(true);\n\n    let [video, setVideo] = useState([]);\n\n    let [audio, setAudio] = useState();\n\n    let [screen, setScreen] = useState();\n\n    let [showModal, setModal] = useState(true);\n\n    let [screenAvailable, setScreenAvailable] = useState();\n\n    let [messages, setMessages] = useState([])\n\n    let [message, setMessage] = useState(\"\");\n\n    let [newMessages, setNewMessages] = useState(3);\n\n    let [askForUsername, setAskForUsername] = useState(true);\n\n    let [username, setUsername] = useState(\"\");\n\n    const videoRef = useRef([])\n\n    let [videos, setVideos] = useState([])\n\n    // TODO\n    // if(isChrome() === false) {\n\n\n    // }\n\n    useEffect(() => {\n        console.log(\"HELLO\")\n        getPermissions();\n\n    })\n\n    let getDislayMedia = () => {\n        if (screen) {\n            if (navigator.mediaDevices.getDisplayMedia) {\n                navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n                    .then(getDislayMediaSuccess)\n                    .then((stream) => { })\n                    .catch((e) => console.log(e))\n            }\n        }\n    }\n\n    const getPermissions = async () => {\n        try {\n            const videoPermission = await navigator.mediaDevices.getUserMedia({ video: true });\n            if (videoPermission) {\n                setVideoAvailable(true);\n                console.log('Video permission granted');\n            } else {\n                setVideoAvailable(false);\n                console.log('Video permission denied');\n            }\n\n            const audioPermission = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (audioPermission) {\n                setAudioAvailable(true);\n                console.log('Audio permission granted');\n            } else {\n                setAudioAvailable(false);\n                console.log('Audio permission denied');\n            }\n\n            if (navigator.mediaDevices.getDisplayMedia) {\n                setScreenAvailable(true);\n            } else {\n                setScreenAvailable(false);\n            }\n\n            if (videoAvailable || audioAvailable) {\n                const userMediaStream = await navigator.mediaDevices.getUserMedia({ video: videoAvailable, audio: audioAvailable });\n                if (userMediaStream) {\n                    window.localStream = userMediaStream;\n                    if (localVideoref.current) {\n                        localVideoref.current.srcObject = userMediaStream;\n                    }\n                }\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        if (video !== undefined && audio !== undefined) {\n            getUserMedia();\n            console.log(\"SET STATE HAS \", video, audio);\n\n        }\n\n\n    }, [video, audio])\n    let getMedia = () => {\n        setVideo(videoAvailable);\n        setAudio(audioAvailable);\n        connectToSocketServer();\n\n    }\n\n\n\n\n    let getUserMediaSuccess = (stream) => {\n        try {\n            window.localStream.getTracks().forEach(track => track.stop())\n        } catch (e) { console.log(e) }\n\n        window.localStream = stream\n        localVideoref.current.srcObject = stream\n\n        for (let id in connections) {\n            if (id === socketIdRef.current) continue\n\n            connections[id].addStream(window.localStream)\n\n            connections[id].createOffer().then((description) => {\n                console.log(description)\n                connections[id].setLocalDescription(description)\n                    .then(() => {\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                    })\n                    .catch(e => console.log(e))\n            })\n        }\n\n        stream.getTracks().forEach(track => track.onended = () => {\n            setVideo(false);\n            setAudio(false);\n\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { console.log(e) }\n\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n            window.localStream = blackSilence()\n            localVideoref.current.srcObject = window.localStream\n\n            for (let id in connections) {\n                connections[id].addStream(window.localStream)\n\n                connections[id].createOffer().then((description) => {\n                    connections[id].setLocalDescription(description)\n                        .then(() => {\n                            socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                        })\n                        .catch(e => console.log(e))\n                })\n            }\n        })\n    }\n\n    let getUserMedia = () => {\n        if ((video && videoAvailable) || (audio && audioAvailable)) {\n            navigator.mediaDevices.getUserMedia({ video: video, audio: audio })\n                .then(getUserMediaSuccess)\n                .then((stream) => { })\n                .catch((e) => console.log(e))\n        } else {\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { }\n        }\n    }\n\n\n\n\n\n    let getDislayMediaSuccess = (stream) => {\n        console.log(\"HERE\")\n        try {\n            window.localStream.getTracks().forEach(track => track.stop())\n        } catch (e) { console.log(e) }\n\n        window.localStream = stream\n        localVideoref.current.srcObject = stream\n\n        for (let id in connections) {\n            if (id === socketIdRef.current) continue\n\n            connections[id].addStream(window.localStream)\n\n            connections[id].createOffer().then((description) => {\n                connections[id].setLocalDescription(description)\n                    .then(() => {\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\n                    })\n                    .catch(e => console.log(e))\n            })\n        }\n\n        stream.getTracks().forEach(track => track.onended = () => {\n            setScreen(false)\n\n            try {\n                let tracks = localVideoref.current.srcObject.getTracks()\n                tracks.forEach(track => track.stop())\n            } catch (e) { console.log(e) }\n\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n            window.localStream = blackSilence()\n            localVideoref.current.srcObject = window.localStream\n\n            getUserMedia()\n\n        })\n    }\n\n    let gotMessageFromServer = (fromId, message) => {\n        var signal = JSON.parse(message)\n\n        if (fromId !== socketIdRef.current) {\n            if (signal.sdp) {\n                connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n                    if (signal.sdp.type === 'offer') {\n                        connections[fromId].createAnswer().then((description) => {\n                            connections[fromId].setLocalDescription(description).then(() => {\n                                socketRef.current.emit('signal', fromId, JSON.stringify({ 'sdp': connections[fromId].localDescription }))\n                            }).catch(e => console.log(e))\n                        }).catch(e => console.log(e))\n                    }\n                }).catch(e => console.log(e))\n            }\n\n            if (signal.ice) {\n                connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e))\n            }\n        }\n    }\n\n\n\n\n    let connectToSocketServer = () => {\n        socketRef.current = io.connect(server_url, { secure: false })\n\n        socketRef.current.on('signal', gotMessageFromServer)\n\n        socketRef.current.on('connect', () => {\n            socketRef.current.emit('join-call', window.location.href)\n            socketIdRef.current = socketRef.current.id\n\n            socketRef.current.on('chat-message', addMessage)\n\n            socketRef.current.on('user-left', (id) => {\n                setVideos((videos) => videos.filter((video) => video.socketId !== id))\n            })\n\n            socketRef.current.on('user-joined', (id, clients) => {\n                clients.forEach((socketListId) => {\n\n                    connections[socketListId] = new RTCPeerConnection(peerConfigConnections)\n                    // Wait for their ice candidate       \n                    connections[socketListId].onicecandidate = function (event) {\n                        if (event.candidate != null) {\n                            socketRef.current.emit('signal', socketListId, JSON.stringify({ 'ice': event.candidate }))\n                        }\n                    }\n\n                    // Wait for their video stream\n                    connections[socketListId].onaddstream = (event) => {\n                        console.log(\"BEFORE:\", videoRef.current);\n                        console.log(\"FINDING ID: \", socketListId);\n\n                        let videoExists = videoRef.current.find(video => video.socketId === socketListId);\n\n                        if (videoExists) {\n                            console.log(\"FOUND EXISTING\");\n\n                            // Update the stream of the existing video\n                            setVideos(videos => {\n                                const updatedVideos = videos.map(video =>\n                                    video.socketId === socketListId ? { ...video, stream: event.stream } : video\n                                );\n                                videoRef.current = updatedVideos;\n                                return updatedVideos;\n                            });\n                        } else {\n                            // Create a new video\n                            console.log(\"CREATING NEW\");\n                            let newVideo = {\n                                socketId: socketListId,\n                                stream: event.stream,\n                                autoplay: true,\n                                playsinline: true\n                            };\n\n                            setVideos(videos => {\n                                const updatedVideos = [...videos, newVideo];\n                                videoRef.current = updatedVideos;\n                                return updatedVideos;\n                            });\n                        }\n                    };\n\n\n                    // Add the local video stream\n                    if (window.localStream !== undefined && window.localStream !== null) {\n                        connections[socketListId].addStream(window.localStream)\n                    } else {\n                        let blackSilence = (...args) => new MediaStream([black(...args), silence()])\n                        window.localStream = blackSilence()\n                        connections[socketListId].addStream(window.localStream)\n                    }\n                })\n\n                if (id === socketIdRef.current) {\n                    for (let id2 in connections) {\n                        if (id2 === socketIdRef.current) continue\n\n                        try {\n                            connections[id2].addStream(window.localStream)\n                        } catch (e) { }\n\n                        connections[id2].createOffer().then((description) => {\n                            connections[id2].setLocalDescription(description)\n                                .then(() => {\n                                    socketRef.current.emit('signal', id2, JSON.stringify({ 'sdp': connections[id2].localDescription }))\n                                })\n                                .catch(e => console.log(e))\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    let silence = () => {\n        let ctx = new AudioContext()\n        let oscillator = ctx.createOscillator()\n        let dst = oscillator.connect(ctx.createMediaStreamDestination())\n        oscillator.start()\n        ctx.resume()\n        return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false })\n    }\n    let black = ({ width = 640, height = 480 } = {}) => {\n        let canvas = Object.assign(document.createElement(\"canvas\"), { width, height })\n        canvas.getContext('2d').fillRect(0, 0, width, height)\n        let stream = canvas.captureStream()\n        return Object.assign(stream.getVideoTracks()[0], { enabled: false })\n    }\n\n    let handleVideo = () => {\n        setVideo(!video);\n        // getUserMedia();\n    }\n    let handleAudio = () => {\n        setAudio(!audio)\n        // getUserMedia();\n    }\n\n    useEffect(() => {\n        if (screen !== undefined) {\n            getDislayMedia();\n        }\n    }, [screen])\n    let handleScreen = () => {\n        setScreen(!screen);\n    }\n\n    let handleEndCall = () => {\n        try {\n            let tracks = localVideoref.current.srcObject.getTracks()\n            tracks.forEach(track => track.stop())\n        } catch (e) { }\n        window.location.href = \"/\"\n    }\n\n    let openChat = () => {\n        setModal(true);\n        setNewMessages(0);\n    }\n    let closeChat = () => {\n        setModal(false);\n    }\n    let handleMessage = (e) => {\n        setMessage(e.target.value);\n    }\n\n    const addMessage = (data, sender, socketIdSender) => {\n        setMessages((prevMessages) => [\n            ...prevMessages,\n            { sender: sender, data: data }\n        ]);\n        if (socketIdSender !== socketIdRef.current) {\n            setNewMessages((prevNewMessages) => prevNewMessages + 1);\n        }\n    };\n\n\n\n    let sendMessage = () => {\n        console.log(socketRef.current);\n        socketRef.current.emit('chat-message', message, username)\n        setMessage(\"\");\n\n        // this.setState({ message: \"\", sender: username })\n    }\n\n    \n    let connect = () => {\n        setAskForUsername(false);\n        getMedia();\n    }\n\n\n    return (\n        <div>\n\n            {askForUsername === true ?\n\n                <div>\n\n\n                    <h2>Enter into Lobby </h2>\n                    <TextField id=\"outlined-basic\" label=\"Username\" value={username} onChange={e => setUsername(e.target.value)} variant=\"outlined\" />\n                    <Button variant=\"contained\" onClick={connect}>Connect</Button>\n\n\n                    <div>\n                        <video ref={localVideoref} autoPlay muted></video>\n                    </div>\n\n                </div> :\n\n\n                <div className={styles.meetVideoContainer}>\n\n                    {showModal ? <div className={styles.chatRoom}>\n\n                        <div className={styles.chatContainer}>\n                            <h1>Chat</h1>\n\n                            <div className={styles.chattingDisplay}>\n\n                                {messages.length !== 0 ? messages.map((item, index) => {\n\n                                    console.log(messages)\n                                    return (\n                                        <div style={{ marginBottom: \"20px\" }} key={index}>\n                                            <p style={{ fontWeight: \"bold\" }}>{item.sender}</p>\n                                            <p>{item.data}</p>\n                                        </div>\n                                    )\n                                }) : <p>No Messages Yet</p>}\n\n\n                            </div>\n\n                            <div className={styles.chattingArea}>\n                                <TextField value={message} onChange={(e) => setMessage(e.target.value)} id=\"outlined-basic\" label=\"Enter Your chat\" variant=\"outlined\" />\n                                <Button variant='contained' onClick={sendMessage}>Send</Button>\n                            </div>\n\n\n                        </div>\n                    </div> : <></>}\n\n\n                    <div className={styles.buttonContainers}>\n                        <IconButton onClick={handleVideo} style={{ color: \"white\" }}>\n                            {(video === true) ? <VideocamIcon /> : <VideocamOffIcon />}\n                        </IconButton>\n                        <IconButton onClick={handleEndCall} style={{ color: \"red\" }}>\n                            <CallEndIcon  />\n                        </IconButton>\n                        <IconButton onClick={handleAudio} style={{ color: \"white\" }}>\n                            {audio === true ? <MicIcon /> : <MicOffIcon />}\n                        </IconButton>\n\n                        {screenAvailable === true ?\n                            <IconButton onClick={handleScreen} style={{ color: \"white\" }}>\n                                {screen === true ? <ScreenShareIcon /> : <StopScreenShareIcon />}\n                            </IconButton> : <></>}\n\n                        <Badge badgeContent={newMessages} max={999} color='orange'>\n                            <IconButton onClick={() => setModal(!showModal)} style={{ color: \"white\" }}>\n                                <ChatIcon />                        </IconButton>\n                        </Badge>\n\n                    </div>\n\n\n                    <video className={styles.meetUserVideo} ref={localVideoref} autoPlay muted></video>\n\n                    <div className={styles.conferenceView}>\n                        {videos.map((video) => (\n                            <div key={video.socketId}>\n                                <video\n\n                                    data-socket={video.socketId}\n                                    ref={ref => {\n                                        if (ref && video.stream) {\n                                            ref.srcObject = video.stream;\n                                        }\n                                    }}\n                                    autoPlay\n                                >\n                                </video>\n                            </div>\n\n                        ))}\n\n                    </div>\n\n                </div>\n\n            }\n\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,KAAK,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAC5D,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,MAAM,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,UAAU,GAAGL,MAAM;AAEzB,IAAIM,WAAW,GAAG,CAAC,CAAC;AAEpB,MAAMC,qBAAqB,GAAG;EAC1B,YAAY,EAAE,CACV;IAAE,MAAM,EAAE;EAA+B,CAAC;AAElD,CAAC;AAED,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAEzC,IAAIC,SAAS,GAAG1B,MAAM,CAAC,CAAC;EACxB,IAAI2B,WAAW,GAAG3B,MAAM,CAAC,CAAC;EAE1B,IAAI4B,aAAa,GAAG5B,MAAM,CAAC,CAAC;EAE5B,IAAI,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAExD,IAAI,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAExD,IAAI,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAI,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,CAAC;EAElC,IAAI,CAACoC,MAAM,EAAEC,SAAS,CAAC,GAAGrC,QAAQ,CAAC,CAAC;EAEpC,IAAI,CAACsC,SAAS,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAE1C,IAAI,CAACwC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAC,CAAC;EAEtD,IAAI,CAAC0C,QAAQ,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAE1C,IAAI,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAExC,IAAI,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,CAAC,CAAC;EAE/C,IAAI,CAACgD,cAAc,EAAEC,iBAAiB,CAAC,GAAGjD,QAAQ,CAAC,IAAI,CAAC;EAExD,IAAI,CAACkD,QAAQ,EAAEC,WAAW,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMoD,QAAQ,GAAGrD,MAAM,CAAC,EAAE,CAAC;EAE3B,IAAI,CAACsD,MAAM,EAAEC,SAAS,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;;EAGA;;EAEAF,SAAS,CAAC,MAAM;IACZyD,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBC,cAAc,CAAC,CAAC;EAEpB,CAAC,CAAC;EAEF,IAAIC,cAAc,GAAGA,CAAA,KAAM;IACvB,IAAItB,MAAM,EAAE;MACR,IAAIuB,SAAS,CAACC,YAAY,CAACC,eAAe,EAAE;QACxCF,SAAS,CAACC,YAAY,CAACC,eAAe,CAAC;UAAE7B,KAAK,EAAE,IAAI;UAAEE,KAAK,EAAE;QAAK,CAAC,CAAC,CAC/D4B,IAAI,CAACC,qBAAqB,CAAC,CAC3BD,IAAI,CAAEE,MAAM,IAAK,CAAE,CAAC,CAAC,CACrBC,KAAK,CAAEC,CAAC,IAAKX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;MACrC;IACJ;EACJ,CAAC;EAED,MAAMT,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMU,eAAe,GAAG,MAAMR,SAAS,CAACC,YAAY,CAACQ,YAAY,CAAC;QAAEpC,KAAK,EAAE;MAAK,CAAC,CAAC;MAClF,IAAImC,eAAe,EAAE;QACjBtC,iBAAiB,CAAC,IAAI,CAAC;QACvB0B,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C,CAAC,MAAM;QACH3B,iBAAiB,CAAC,KAAK,CAAC;QACxB0B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAC1C;MAEA,MAAMa,eAAe,GAAG,MAAMV,SAAS,CAACC,YAAY,CAACQ,YAAY,CAAC;QAAElC,KAAK,EAAE;MAAK,CAAC,CAAC;MAClF,IAAImC,eAAe,EAAE;QACjBtC,iBAAiB,CAAC,IAAI,CAAC;QACvBwB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC3C,CAAC,MAAM;QACHzB,iBAAiB,CAAC,KAAK,CAAC;QACxBwB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MAC1C;MAEA,IAAIG,SAAS,CAACC,YAAY,CAACC,eAAe,EAAE;QACxCpB,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,MAAM;QACHA,kBAAkB,CAAC,KAAK,CAAC;MAC7B;MAEA,IAAIb,cAAc,IAAIE,cAAc,EAAE;QAClC,MAAMwC,eAAe,GAAG,MAAMX,SAAS,CAACC,YAAY,CAACQ,YAAY,CAAC;UAAEpC,KAAK,EAAEJ,cAAc;UAAEM,KAAK,EAAEJ;QAAe,CAAC,CAAC;QACnH,IAAIwC,eAAe,EAAE;UACjBC,MAAM,CAACC,WAAW,GAAGF,eAAe;UACpC,IAAI3C,aAAa,CAAC8C,OAAO,EAAE;YACvB9C,aAAa,CAAC8C,OAAO,CAACC,SAAS,GAAGJ,eAAe;UACrD;QACJ;MACJ;IACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZpB,OAAO,CAACC,GAAG,CAACmB,KAAK,CAAC;IACtB;EACJ,CAAC;EAED7E,SAAS,CAAC,MAAM;IACZ,IAAIkC,KAAK,KAAK4C,SAAS,IAAI1C,KAAK,KAAK0C,SAAS,EAAE;MAC5CR,YAAY,CAAC,CAAC;MACdb,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAExB,KAAK,EAAEE,KAAK,CAAC;IAE/C;EAGJ,CAAC,EAAE,CAACF,KAAK,EAAEE,KAAK,CAAC,CAAC;EAClB,IAAI2C,QAAQ,GAAGA,CAAA,KAAM;IACjB5C,QAAQ,CAACL,cAAc,CAAC;IACxBO,QAAQ,CAACL,cAAc,CAAC;IACxBgD,qBAAqB,CAAC,CAAC;EAE3B,CAAC;EAKD,IAAIC,mBAAmB,GAAIf,MAAM,IAAK;IAClC,IAAI;MACAO,MAAM,CAACC,WAAW,CAACQ,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,OAAOjB,CAAC,EAAE;MAAEX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC;IAAC;IAE7BK,MAAM,CAACC,WAAW,GAAGR,MAAM;IAC3BrC,aAAa,CAAC8C,OAAO,CAACC,SAAS,GAAGV,MAAM;IAExC,KAAK,IAAIoB,EAAE,IAAI/D,WAAW,EAAE;MACxB,IAAI+D,EAAE,KAAK1D,WAAW,CAAC+C,OAAO,EAAE;MAEhCpD,WAAW,CAAC+D,EAAE,CAAC,CAACC,SAAS,CAACd,MAAM,CAACC,WAAW,CAAC;MAE7CnD,WAAW,CAAC+D,EAAE,CAAC,CAACE,WAAW,CAAC,CAAC,CAACxB,IAAI,CAAEyB,WAAW,IAAK;QAChDhC,OAAO,CAACC,GAAG,CAAC+B,WAAW,CAAC;QACxBlE,WAAW,CAAC+D,EAAE,CAAC,CAACI,mBAAmB,CAACD,WAAW,CAAC,CAC3CzB,IAAI,CAAC,MAAM;UACRrC,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,QAAQ,EAAEL,EAAE,EAAEM,IAAI,CAACC,SAAS,CAAC;YAAE,KAAK,EAAEtE,WAAW,CAAC+D,EAAE,CAAC,CAACQ;UAAiB,CAAC,CAAC,CAAC;QACrG,CAAC,CAAC,CACD3B,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC;IACN;IAEAF,MAAM,CAACgB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACW,OAAO,GAAG,MAAM;MACtD5D,QAAQ,CAAC,KAAK,CAAC;MACfE,QAAQ,CAAC,KAAK,CAAC;MAEf,IAAI;QACA,IAAI2D,MAAM,GAAGnE,aAAa,CAAC8C,OAAO,CAACC,SAAS,CAACM,SAAS,CAAC,CAAC;QACxDc,MAAM,CAACb,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOjB,CAAC,EAAE;QAAEX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC;MAAC;MAE7B,IAAI6B,YAAY,GAAGA,CAAC,GAAGC,IAAI,KAAK,IAAIC,WAAW,CAAC,CAACC,KAAK,CAAC,GAAGF,IAAI,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAC,CAAC;MAC5E5B,MAAM,CAACC,WAAW,GAAGuB,YAAY,CAAC,CAAC;MACnCpE,aAAa,CAAC8C,OAAO,CAACC,SAAS,GAAGH,MAAM,CAACC,WAAW;MAEpD,KAAK,IAAIY,EAAE,IAAI/D,WAAW,EAAE;QACxBA,WAAW,CAAC+D,EAAE,CAAC,CAACC,SAAS,CAACd,MAAM,CAACC,WAAW,CAAC;QAE7CnD,WAAW,CAAC+D,EAAE,CAAC,CAACE,WAAW,CAAC,CAAC,CAACxB,IAAI,CAAEyB,WAAW,IAAK;UAChDlE,WAAW,CAAC+D,EAAE,CAAC,CAACI,mBAAmB,CAACD,WAAW,CAAC,CAC3CzB,IAAI,CAAC,MAAM;YACRrC,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,QAAQ,EAAEL,EAAE,EAAEM,IAAI,CAACC,SAAS,CAAC;cAAE,KAAK,EAAEtE,WAAW,CAAC+D,EAAE,CAAC,CAACQ;YAAiB,CAAC,CAAC,CAAC;UACrG,CAAC,CAAC,CACD3B,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC;EAED,IAAIE,YAAY,GAAGA,CAAA,KAAM;IACrB,IAAKpC,KAAK,IAAIJ,cAAc,IAAMM,KAAK,IAAIJ,cAAe,EAAE;MACxD6B,SAAS,CAACC,YAAY,CAACQ,YAAY,CAAC;QAAEpC,KAAK,EAAEA,KAAK;QAAEE,KAAK,EAAEA;MAAM,CAAC,CAAC,CAC9D4B,IAAI,CAACiB,mBAAmB,CAAC,CACzBjB,IAAI,CAAEE,MAAM,IAAK,CAAE,CAAC,CAAC,CACrBC,KAAK,CAAEC,CAAC,IAAKX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;IACrC,CAAC,MAAM;MACH,IAAI;QACA,IAAI4B,MAAM,GAAGnE,aAAa,CAAC8C,OAAO,CAACC,SAAS,CAACM,SAAS,CAAC,CAAC;QACxDc,MAAM,CAACb,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOjB,CAAC,EAAE,CAAE;IAClB;EACJ,CAAC;EAMD,IAAIH,qBAAqB,GAAIC,MAAM,IAAK;IACpCT,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAI;MACAe,MAAM,CAACC,WAAW,CAACQ,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC,CAAC,OAAOjB,CAAC,EAAE;MAAEX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC;IAAC;IAE7BK,MAAM,CAACC,WAAW,GAAGR,MAAM;IAC3BrC,aAAa,CAAC8C,OAAO,CAACC,SAAS,GAAGV,MAAM;IAExC,KAAK,IAAIoB,EAAE,IAAI/D,WAAW,EAAE;MACxB,IAAI+D,EAAE,KAAK1D,WAAW,CAAC+C,OAAO,EAAE;MAEhCpD,WAAW,CAAC+D,EAAE,CAAC,CAACC,SAAS,CAACd,MAAM,CAACC,WAAW,CAAC;MAE7CnD,WAAW,CAAC+D,EAAE,CAAC,CAACE,WAAW,CAAC,CAAC,CAACxB,IAAI,CAAEyB,WAAW,IAAK;QAChDlE,WAAW,CAAC+D,EAAE,CAAC,CAACI,mBAAmB,CAACD,WAAW,CAAC,CAC3CzB,IAAI,CAAC,MAAM;UACRrC,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,QAAQ,EAAEL,EAAE,EAAEM,IAAI,CAACC,SAAS,CAAC;YAAE,KAAK,EAAEtE,WAAW,CAAC+D,EAAE,CAAC,CAACQ;UAAiB,CAAC,CAAC,CAAC;QACrG,CAAC,CAAC,CACD3B,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC;IACN;IAEAF,MAAM,CAACgB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACW,OAAO,GAAG,MAAM;MACtDxD,SAAS,CAAC,KAAK,CAAC;MAEhB,IAAI;QACA,IAAIyD,MAAM,GAAGnE,aAAa,CAAC8C,OAAO,CAACC,SAAS,CAACM,SAAS,CAAC,CAAC;QACxDc,MAAM,CAACb,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOjB,CAAC,EAAE;QAAEX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC;MAAC;MAE7B,IAAI6B,YAAY,GAAGA,CAAC,GAAGC,IAAI,KAAK,IAAIC,WAAW,CAAC,CAACC,KAAK,CAAC,GAAGF,IAAI,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAC,CAAC;MAC5E5B,MAAM,CAACC,WAAW,GAAGuB,YAAY,CAAC,CAAC;MACnCpE,aAAa,CAAC8C,OAAO,CAACC,SAAS,GAAGH,MAAM,CAACC,WAAW;MAEpDJ,YAAY,CAAC,CAAC;IAElB,CAAC,CAAC;EACN,CAAC;EAED,IAAIgC,oBAAoB,GAAGA,CAACC,MAAM,EAAEzD,OAAO,KAAK;IAC5C,IAAI0D,MAAM,GAAGZ,IAAI,CAACa,KAAK,CAAC3D,OAAO,CAAC;IAEhC,IAAIyD,MAAM,KAAK3E,WAAW,CAAC+C,OAAO,EAAE;MAChC,IAAI6B,MAAM,CAACE,GAAG,EAAE;QACZnF,WAAW,CAACgF,MAAM,CAAC,CAACI,oBAAoB,CAAC,IAAIC,qBAAqB,CAACJ,MAAM,CAACE,GAAG,CAAC,CAAC,CAAC1C,IAAI,CAAC,MAAM;UACvF,IAAIwC,MAAM,CAACE,GAAG,CAACG,IAAI,KAAK,OAAO,EAAE;YAC7BtF,WAAW,CAACgF,MAAM,CAAC,CAACO,YAAY,CAAC,CAAC,CAAC9C,IAAI,CAAEyB,WAAW,IAAK;cACrDlE,WAAW,CAACgF,MAAM,CAAC,CAACb,mBAAmB,CAACD,WAAW,CAAC,CAACzB,IAAI,CAAC,MAAM;gBAC5DrC,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,QAAQ,EAAEY,MAAM,EAAEX,IAAI,CAACC,SAAS,CAAC;kBAAE,KAAK,EAAEtE,WAAW,CAACgF,MAAM,CAAC,CAACT;gBAAiB,CAAC,CAAC,CAAC;cAC7G,CAAC,CAAC,CAAC3B,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAACD,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;UACjC;QACJ,CAAC,CAAC,CAACD,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;MACjC;MAEA,IAAIoC,MAAM,CAACO,GAAG,EAAE;QACZxF,WAAW,CAACgF,MAAM,CAAC,CAACS,eAAe,CAAC,IAAIC,eAAe,CAACT,MAAM,CAACO,GAAG,CAAC,CAAC,CAAC5C,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;MACnG;IACJ;EACJ,CAAC;EAKD,IAAIY,qBAAqB,GAAGA,CAAA,KAAM;IAC9BrD,SAAS,CAACgD,OAAO,GAAGxE,EAAE,CAAC+G,OAAO,CAAC5F,UAAU,EAAE;MAAE6F,MAAM,EAAE;IAAM,CAAC,CAAC;IAE7DxF,SAAS,CAACgD,OAAO,CAACyC,EAAE,CAAC,QAAQ,EAAEd,oBAAoB,CAAC;IAEpD3E,SAAS,CAACgD,OAAO,CAACyC,EAAE,CAAC,SAAS,EAAE,MAAM;MAClCzF,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,WAAW,EAAElB,MAAM,CAAC4C,QAAQ,CAACC,IAAI,CAAC;MACzD1F,WAAW,CAAC+C,OAAO,GAAGhD,SAAS,CAACgD,OAAO,CAACW,EAAE;MAE1C3D,SAAS,CAACgD,OAAO,CAACyC,EAAE,CAAC,cAAc,EAAEG,UAAU,CAAC;MAEhD5F,SAAS,CAACgD,OAAO,CAACyC,EAAE,CAAC,WAAW,EAAG9B,EAAE,IAAK;QACtC9B,SAAS,CAAED,MAAM,IAAKA,MAAM,CAACiE,MAAM,CAAEtF,KAAK,IAAKA,KAAK,CAACuF,QAAQ,KAAKnC,EAAE,CAAC,CAAC;MAC1E,CAAC,CAAC;MAEF3D,SAAS,CAACgD,OAAO,CAACyC,EAAE,CAAC,aAAa,EAAE,CAAC9B,EAAE,EAAEoC,OAAO,KAAK;QACjDA,OAAO,CAACvC,OAAO,CAAEwC,YAAY,IAAK;UAE9BpG,WAAW,CAACoG,YAAY,CAAC,GAAG,IAAIC,iBAAiB,CAACpG,qBAAqB,CAAC;UACxE;UACAD,WAAW,CAACoG,YAAY,CAAC,CAACE,cAAc,GAAG,UAAUC,KAAK,EAAE;YACxD,IAAIA,KAAK,CAACC,SAAS,IAAI,IAAI,EAAE;cACzBpG,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,QAAQ,EAAEgC,YAAY,EAAE/B,IAAI,CAACC,SAAS,CAAC;gBAAE,KAAK,EAAEiC,KAAK,CAACC;cAAU,CAAC,CAAC,CAAC;YAC9F;UACJ,CAAC;;UAED;UACAxG,WAAW,CAACoG,YAAY,CAAC,CAACK,WAAW,GAAIF,KAAK,IAAK;YAC/CrE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,QAAQ,CAACqB,OAAO,CAAC;YACxClB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEiE,YAAY,CAAC;YAEzC,IAAIM,WAAW,GAAG3E,QAAQ,CAACqB,OAAO,CAACuD,IAAI,CAAChG,KAAK,IAAIA,KAAK,CAACuF,QAAQ,KAAKE,YAAY,CAAC;YAEjF,IAAIM,WAAW,EAAE;cACbxE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;cAE7B;cACAF,SAAS,CAACD,MAAM,IAAI;gBAChB,MAAM4E,aAAa,GAAG5E,MAAM,CAAC6E,GAAG,CAAClG,KAAK,IAClCA,KAAK,CAACuF,QAAQ,KAAKE,YAAY,GAAG;kBAAE,GAAGzF,KAAK;kBAAEgC,MAAM,EAAE4D,KAAK,CAAC5D;gBAAO,CAAC,GAAGhC,KAC3E,CAAC;gBACDoB,QAAQ,CAACqB,OAAO,GAAGwD,aAAa;gBAChC,OAAOA,aAAa;cACxB,CAAC,CAAC;YACN,CAAC,MAAM;cACH;cACA1E,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;cAC3B,IAAI2E,QAAQ,GAAG;gBACXZ,QAAQ,EAAEE,YAAY;gBACtBzD,MAAM,EAAE4D,KAAK,CAAC5D,MAAM;gBACpBoE,QAAQ,EAAE,IAAI;gBACdC,WAAW,EAAE;cACjB,CAAC;cAED/E,SAAS,CAACD,MAAM,IAAI;gBAChB,MAAM4E,aAAa,GAAG,CAAC,GAAG5E,MAAM,EAAE8E,QAAQ,CAAC;gBAC3C/E,QAAQ,CAACqB,OAAO,GAAGwD,aAAa;gBAChC,OAAOA,aAAa;cACxB,CAAC,CAAC;YACN;UACJ,CAAC;;UAGD;UACA,IAAI1D,MAAM,CAACC,WAAW,KAAKI,SAAS,IAAIL,MAAM,CAACC,WAAW,KAAK,IAAI,EAAE;YACjEnD,WAAW,CAACoG,YAAY,CAAC,CAACpC,SAAS,CAACd,MAAM,CAACC,WAAW,CAAC;UAC3D,CAAC,MAAM;YACH,IAAIuB,YAAY,GAAGA,CAAC,GAAGC,IAAI,KAAK,IAAIC,WAAW,CAAC,CAACC,KAAK,CAAC,GAAGF,IAAI,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5E5B,MAAM,CAACC,WAAW,GAAGuB,YAAY,CAAC,CAAC;YACnC1E,WAAW,CAACoG,YAAY,CAAC,CAACpC,SAAS,CAACd,MAAM,CAACC,WAAW,CAAC;UAC3D;QACJ,CAAC,CAAC;QAEF,IAAIY,EAAE,KAAK1D,WAAW,CAAC+C,OAAO,EAAE;UAC5B,KAAK,IAAI6D,GAAG,IAAIjH,WAAW,EAAE;YACzB,IAAIiH,GAAG,KAAK5G,WAAW,CAAC+C,OAAO,EAAE;YAEjC,IAAI;cACApD,WAAW,CAACiH,GAAG,CAAC,CAACjD,SAAS,CAACd,MAAM,CAACC,WAAW,CAAC;YAClD,CAAC,CAAC,OAAON,CAAC,EAAE,CAAE;YAEd7C,WAAW,CAACiH,GAAG,CAAC,CAAChD,WAAW,CAAC,CAAC,CAACxB,IAAI,CAAEyB,WAAW,IAAK;cACjDlE,WAAW,CAACiH,GAAG,CAAC,CAAC9C,mBAAmB,CAACD,WAAW,CAAC,CAC5CzB,IAAI,CAAC,MAAM;gBACRrC,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,QAAQ,EAAE6C,GAAG,EAAE5C,IAAI,CAACC,SAAS,CAAC;kBAAE,KAAK,EAAEtE,WAAW,CAACiH,GAAG,CAAC,CAAC1C;gBAAiB,CAAC,CAAC,CAAC;cACvG,CAAC,CAAC,CACD3B,KAAK,CAACC,CAAC,IAAIX,OAAO,CAACC,GAAG,CAACU,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC;UACN;QACJ;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAED,IAAIiC,OAAO,GAAGA,CAAA,KAAM;IAChB,IAAIoC,GAAG,GAAG,IAAIC,YAAY,CAAC,CAAC;IAC5B,IAAIC,UAAU,GAAGF,GAAG,CAACG,gBAAgB,CAAC,CAAC;IACvC,IAAIC,GAAG,GAAGF,UAAU,CAACzB,OAAO,CAACuB,GAAG,CAACK,4BAA4B,CAAC,CAAC,CAAC;IAChEH,UAAU,CAACI,KAAK,CAAC,CAAC;IAClBN,GAAG,CAACO,MAAM,CAAC,CAAC;IACZ,OAAOC,MAAM,CAACC,MAAM,CAACL,GAAG,CAAC3E,MAAM,CAACiF,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC;EAC5E,CAAC;EACD,IAAIhD,KAAK,GAAGA,CAAC;IAAEiD,KAAK,GAAG,GAAG;IAAEC,MAAM,GAAG;EAAI,CAAC,GAAG,CAAC,CAAC,KAAK;IAChD,IAAIC,MAAM,GAAGN,MAAM,CAACC,MAAM,CAACM,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,EAAE;MAAEJ,KAAK;MAAEC;IAAO,CAAC,CAAC;IAC/EC,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEN,KAAK,EAAEC,MAAM,CAAC;IACrD,IAAIpF,MAAM,GAAGqF,MAAM,CAACK,aAAa,CAAC,CAAC;IACnC,OAAOX,MAAM,CAACC,MAAM,CAAChF,MAAM,CAAC2F,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MAAET,OAAO,EAAE;IAAM,CAAC,CAAC;EACxE,CAAC;EAED,IAAIU,WAAW,GAAGA,CAAA,KAAM;IACpB3H,QAAQ,CAAC,CAACD,KAAK,CAAC;IAChB;EACJ,CAAC;EACD,IAAI6H,WAAW,GAAGA,CAAA,KAAM;IACpB1H,QAAQ,CAAC,CAACD,KAAK,CAAC;IAChB;EACJ,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACZ,IAAIsC,MAAM,KAAKwC,SAAS,EAAE;MACtBlB,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC,EAAE,CAACtB,MAAM,CAAC,CAAC;EACZ,IAAI0H,YAAY,GAAGA,CAAA,KAAM;IACrBzH,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,IAAI2H,aAAa,GAAGA,CAAA,KAAM;IACtB,IAAI;MACA,IAAIjE,MAAM,GAAGnE,aAAa,CAAC8C,OAAO,CAACC,SAAS,CAACM,SAAS,CAAC,CAAC;MACxDc,MAAM,CAACb,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOjB,CAAC,EAAE,CAAE;IACdK,MAAM,CAAC4C,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B,CAAC;EAED,IAAI4C,QAAQ,GAAGA,CAAA,KAAM;IACjBzH,QAAQ,CAAC,IAAI,CAAC;IACdQ,cAAc,CAAC,CAAC,CAAC;EACrB,CAAC;EACD,IAAIkH,SAAS,GAAGA,CAAA,KAAM;IAClB1H,QAAQ,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,IAAI2H,aAAa,GAAIhG,CAAC,IAAK;IACvBrB,UAAU,CAACqB,CAAC,CAACiG,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAM/C,UAAU,GAAGA,CAACgD,IAAI,EAAEC,MAAM,EAAEC,cAAc,KAAK;IACjD5H,WAAW,CAAE6H,YAAY,IAAK,CAC1B,GAAGA,YAAY,EACf;MAAEF,MAAM,EAAEA,MAAM;MAAED,IAAI,EAAEA;IAAK,CAAC,CACjC,CAAC;IACF,IAAIE,cAAc,KAAK7I,WAAW,CAAC+C,OAAO,EAAE;MACxC1B,cAAc,CAAE0H,eAAe,IAAKA,eAAe,GAAG,CAAC,CAAC;IAC5D;EACJ,CAAC;EAID,IAAIC,WAAW,GAAGA,CAAA,KAAM;IACpBnH,OAAO,CAACC,GAAG,CAAC/B,SAAS,CAACgD,OAAO,CAAC;IAC9BhD,SAAS,CAACgD,OAAO,CAACgB,IAAI,CAAC,cAAc,EAAE7C,OAAO,EAAEM,QAAQ,CAAC;IACzDL,UAAU,CAAC,EAAE,CAAC;;IAEd;EACJ,CAAC;EAGD,IAAImE,OAAO,GAAGA,CAAA,KAAM;IAChB/D,iBAAiB,CAAC,KAAK,CAAC;IACxB4B,QAAQ,CAAC,CAAC;EACd,CAAC;EAGD,oBACI5D,OAAA;IAAA0J,QAAA,EAEK3H,cAAc,KAAK,IAAI,gBAEpB/B,OAAA;MAAA0J,QAAA,gBAGI1J,OAAA;QAAA0J,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B9J,OAAA,CAACb,SAAS;QAACgF,EAAE,EAAC,gBAAgB;QAAC4F,KAAK,EAAC,UAAU;QAACZ,KAAK,EAAElH,QAAS;QAAC+H,QAAQ,EAAE/G,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACiG,MAAM,CAACC,KAAK,CAAE;QAACc,OAAO,EAAC;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClI9J,OAAA,CAACZ,MAAM;QAAC6K,OAAO,EAAC,WAAW;QAACC,OAAO,EAAEnE,OAAQ;QAAA2D,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAG9D9J,OAAA;QAAA0J,QAAA,eACI1J,OAAA;UAAOmK,GAAG,EAAEzJ,aAAc;UAAC0J,QAAQ;UAACC,KAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,gBAGN9J,OAAA;MAAKsK,SAAS,EAAE/K,MAAM,CAACgL,kBAAmB;MAAAb,QAAA,GAErCrI,SAAS,gBAAGrB,OAAA;QAAKsK,SAAS,EAAE/K,MAAM,CAACiL,QAAS;QAAAd,QAAA,eAEzC1J,OAAA;UAAKsK,SAAS,EAAE/K,MAAM,CAACkL,aAAc;UAAAf,QAAA,gBACjC1J,OAAA;YAAA0J,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEb9J,OAAA;YAAKsK,SAAS,EAAE/K,MAAM,CAACmL,eAAgB;YAAAhB,QAAA,EAElCjI,QAAQ,CAACkJ,MAAM,KAAK,CAAC,GAAGlJ,QAAQ,CAACwF,GAAG,CAAC,CAAC2D,IAAI,EAAEC,KAAK,KAAK;cAEnDvI,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;cACrB,oBACIzB,OAAA;gBAAK8K,KAAK,EAAE;kBAAEC,YAAY,EAAE;gBAAO,CAAE;gBAAArB,QAAA,gBACjC1J,OAAA;kBAAG8K,KAAK,EAAE;oBAAEE,UAAU,EAAE;kBAAO,CAAE;kBAAAtB,QAAA,EAAEkB,IAAI,CAACvB;gBAAM;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnD9J,OAAA;kBAAA0J,QAAA,EAAIkB,IAAI,CAACxB;gBAAI;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA,GAFqBe,KAAK;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAG3C,CAAC;YAEd,CAAC,CAAC,gBAAG9J,OAAA;cAAA0J,QAAA,EAAG;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAG1B,CAAC,eAEN9J,OAAA;YAAKsK,SAAS,EAAE/K,MAAM,CAAC0L,YAAa;YAAAvB,QAAA,gBAChC1J,OAAA,CAACb,SAAS;cAACgK,KAAK,EAAExH,OAAQ;cAACqI,QAAQ,EAAG/G,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACiG,MAAM,CAACC,KAAK,CAAE;cAAChF,EAAE,EAAC,gBAAgB;cAAC4F,KAAK,EAAC,iBAAiB;cAACE,OAAO,EAAC;YAAU;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzI9J,OAAA,CAACZ,MAAM;cAAC6K,OAAO,EAAC,WAAW;cAACC,OAAO,EAAET,WAAY;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAAG9J,OAAA,CAAAE,SAAA,mBAAI,CAAC,eAGdF,OAAA;QAAKsK,SAAS,EAAE/K,MAAM,CAAC2L,gBAAiB;QAAAxB,QAAA,gBACpC1J,OAAA,CAACd,UAAU;UAACgL,OAAO,EAAEvB,WAAY;UAACmC,KAAK,EAAE;YAAEK,KAAK,EAAE;UAAQ,CAAE;UAAAzB,QAAA,EACtD3I,KAAK,KAAK,IAAI,gBAAIf,OAAA,CAACX,YAAY;YAAAsK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG9J,OAAA,CAACV,eAAe;YAAAqK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACb9J,OAAA,CAACd,UAAU;UAACgL,OAAO,EAAEpB,aAAc;UAACgC,KAAK,EAAE;YAAEK,KAAK,EAAE;UAAM,CAAE;UAAAzB,QAAA,eACxD1J,OAAA,CAACR,WAAW;YAAAmK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACb9J,OAAA,CAACd,UAAU;UAACgL,OAAO,EAAEtB,WAAY;UAACkC,KAAK,EAAE;YAAEK,KAAK,EAAE;UAAQ,CAAE;UAAAzB,QAAA,EACvDzI,KAAK,KAAK,IAAI,gBAAGjB,OAAA,CAACP,OAAO;YAAAkK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG9J,OAAA,CAACN,UAAU;YAAAiK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EAEZvI,eAAe,KAAK,IAAI,gBACrBvB,OAAA,CAACd,UAAU;UAACgL,OAAO,EAAErB,YAAa;UAACiC,KAAK,EAAE;YAAEK,KAAK,EAAE;UAAQ,CAAE;UAAAzB,QAAA,EACxDvI,MAAM,KAAK,IAAI,gBAAGnB,OAAA,CAACL,eAAe;YAAAgK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG9J,OAAA,CAACJ,mBAAmB;YAAA+J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,gBAAG9J,OAAA,CAAAE,SAAA,mBAAI,CAAC,eAEzBF,OAAA,CAACf,KAAK;UAACmM,YAAY,EAAEvJ,WAAY;UAACwJ,GAAG,EAAE,GAAI;UAACF,KAAK,EAAC,QAAQ;UAAAzB,QAAA,eACtD1J,OAAA,CAACd,UAAU;YAACgL,OAAO,EAAEA,CAAA,KAAM5I,QAAQ,CAAC,CAACD,SAAS,CAAE;YAACyJ,KAAK,EAAE;cAAEK,KAAK,EAAE;YAAQ,CAAE;YAAAzB,QAAA,gBACvE1J,OAAA,CAACH,QAAQ;cAAA8J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,4BAAwB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CAAC,eAGN9J,OAAA;QAAOsK,SAAS,EAAE/K,MAAM,CAAC+L,aAAc;QAACnB,GAAG,EAAEzJ,aAAc;QAAC0J,QAAQ;QAACC,KAAK;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEnF9J,OAAA;QAAKsK,SAAS,EAAE/K,MAAM,CAACgM,cAAe;QAAA7B,QAAA,EACjCtH,MAAM,CAAC6E,GAAG,CAAElG,KAAK,iBACdf,OAAA;UAAA0J,QAAA,eACI1J,OAAA;YAEI,eAAae,KAAK,CAACuF,QAAS;YAC5B6D,GAAG,EAAEA,GAAG,IAAI;cACR,IAAIA,GAAG,IAAIpJ,KAAK,CAACgC,MAAM,EAAE;gBACrBoH,GAAG,CAAC1G,SAAS,GAAG1C,KAAK,CAACgC,MAAM;cAChC;YACJ,CAAE;YACFqH,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEL;QAAC,GAXF/I,KAAK,CAACuF,QAAQ;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYnB,CAER;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIT,CAAC;AAEd;AAACvJ,EAAA,CAhhBuBD,kBAAkB;AAAAkL,EAAA,GAAlBlL,kBAAkB;AAAA,IAAAkL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}